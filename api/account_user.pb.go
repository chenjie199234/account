// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: api/account_user.proto

//this is the proto package name,all proto in this project must use this name as the proto package name

package api

import (
	_ "github.com/chenjie199234/Corelib/pbex"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string           `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Idcard   string           `protobuf:"bytes,2,opt,name=idcard,proto3" json:"idcard,omitempty"`
	Tel      string           `protobuf:"bytes,3,opt,name=tel,proto3" json:"tel,omitempty"`
	Email    string           `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	NickName string           `protobuf:"bytes,5,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	Ctime    uint32           `protobuf:"varint,6,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Money    map[string]int32 `protobuf:"bytes,7,rep,name=money,proto3" json:"money,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{0}
}

func (x *UserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInfo) GetIdcard() string {
	if x != nil {
		return x.Idcard
	}
	return ""
}

func (x *UserInfo) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserInfo) GetCtime() uint32 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *UserInfo) GetMoney() map[string]int32 {
	if x != nil {
		return x.Money
	}
	return nil
}

type GetUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcType string `protobuf:"bytes,1,opt,name=src_type,json=srcType,proto3" json:"src_type,omitempty"`
	Src     string `protobuf:"bytes,2,opt,name=src,proto3" json:"src,omitempty"`
}

func (x *GetUserInfoReq) Reset() {
	*x = GetUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoReq) ProtoMessage() {}

func (x *GetUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoReq.ProtoReflect.Descriptor instead.
func (*GetUserInfoReq) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserInfoReq) GetSrcType() string {
	if x != nil {
		return x.SrcType
	}
	return ""
}

func (x *GetUserInfoReq) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

type GetUserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetUserInfoResp) Reset() {
	*x = GetUserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoResp) ProtoMessage() {}

func (x *GetUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoResp.ProtoReflect.Descriptor instead.
func (*GetUserInfoResp) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserInfoResp) GetInfo() *UserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcType string `protobuf:"bytes,1,opt,name=src_type,json=srcType,proto3" json:"src_type,omitempty"`
	Src     string `protobuf:"bytes,2,opt,name=src,proto3" json:"src,omitempty"`
	// when src_type is idcard or nick_name,this can't be dynamic
	PasswordType string `protobuf:"bytes,3,opt,name=password_type,json=passwordType,proto3" json:"password_type,omitempty"`
	// when password_type is dynamic and this is empty,means send dynamic password to email or tel.
	// when password_type is dynamic and this is not empty,means verify dynamic password.
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{3}
}

func (x *LoginReq) GetSrcType() string {
	if x != nil {
		return x.SrcType
	}
	return ""
}

func (x *LoginReq) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

func (x *LoginReq) GetPasswordType() string {
	if x != nil {
		return x.PasswordType
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string    `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Info  *UserInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	//verify:server already send the dynamic password to user's email or tel(depend on the login_req's src_type and src) and is waiting for verify
	//password:login success,but this account must finish the static password set
	//success:nothing need to do
	Step string `protobuf:"bytes,3,opt,name=step,proto3" json:"step,omitempty"`
}

func (x *LoginResp) Reset() {
	*x = LoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResp) ProtoMessage() {}

func (x *LoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResp.ProtoReflect.Descriptor instead.
func (*LoginResp) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{4}
}

func (x *LoginResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginResp) GetInfo() *UserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *LoginResp) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

type SelfUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SelfUserInfoReq) Reset() {
	*x = SelfUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelfUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfUserInfoReq) ProtoMessage() {}

func (x *SelfUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfUserInfoReq.ProtoReflect.Descriptor instead.
func (*SelfUserInfoReq) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{5}
}

type SelfUserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *SelfUserInfoResp) Reset() {
	*x = SelfUserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelfUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfUserInfoResp) ProtoMessage() {}

func (x *SelfUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfUserInfoResp.ProtoReflect.Descriptor instead.
func (*SelfUserInfoResp) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{6}
}

func (x *SelfUserInfoResp) GetInfo() *UserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateStaticPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// if this is empty,means this is the first time to set the static password
	OldStaticPassword string `protobuf:"bytes,1,opt,name=old_static_password,json=oldStaticPassword,proto3" json:"old_static_password,omitempty"`
	NewStaticPassword string `protobuf:"bytes,2,opt,name=new_static_password,json=newStaticPassword,proto3" json:"new_static_password,omitempty"`
}

func (x *UpdateStaticPasswordReq) Reset() {
	*x = UpdateStaticPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStaticPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStaticPasswordReq) ProtoMessage() {}

func (x *UpdateStaticPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStaticPasswordReq.ProtoReflect.Descriptor instead.
func (*UpdateStaticPasswordReq) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateStaticPasswordReq) GetOldStaticPassword() string {
	if x != nil {
		return x.OldStaticPassword
	}
	return ""
}

func (x *UpdateStaticPasswordReq) GetNewStaticPassword() string {
	if x != nil {
		return x.NewStaticPassword
	}
	return ""
}

type UpdateStaticPasswordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStaticPasswordResp) Reset() {
	*x = UpdateStaticPasswordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStaticPasswordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStaticPasswordResp) ProtoMessage() {}

func (x *UpdateStaticPasswordResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStaticPasswordResp.ProtoReflect.Descriptor instead.
func (*UpdateStaticPasswordResp) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{8}
}

type NickNameDuplicateCheckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NickName string `protobuf:"bytes,1,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
}

func (x *NickNameDuplicateCheckReq) Reset() {
	*x = NickNameDuplicateCheckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NickNameDuplicateCheckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NickNameDuplicateCheckReq) ProtoMessage() {}

func (x *NickNameDuplicateCheckReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NickNameDuplicateCheckReq.ProtoReflect.Descriptor instead.
func (*NickNameDuplicateCheckReq) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{9}
}

func (x *NickNameDuplicateCheckReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

type NickNameDuplicateCheckResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duplicate bool `protobuf:"varint,1,opt,name=duplicate,proto3" json:"duplicate,omitempty"`
}

func (x *NickNameDuplicateCheckResp) Reset() {
	*x = NickNameDuplicateCheckResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NickNameDuplicateCheckResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NickNameDuplicateCheckResp) ProtoMessage() {}

func (x *NickNameDuplicateCheckResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NickNameDuplicateCheckResp.ProtoReflect.Descriptor instead.
func (*NickNameDuplicateCheckResp) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{10}
}

func (x *NickNameDuplicateCheckResp) GetDuplicate() bool {
	if x != nil {
		return x.Duplicate
	}
	return false
}

type UpdateNickNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldReceiverType string `protobuf:"bytes,1,opt,name=old_receiver_type,json=oldReceiverType,proto3" json:"old_receiver_type,omitempty"`
	// if this is empty,means send dynamic password
	// if this is not empty,means verify dynamic password
	OldDynamicPassword string `protobuf:"bytes,2,opt,name=old_dynamic_password,json=oldDynamicPassword,proto3" json:"old_dynamic_password,omitempty"`
	NewNickName        string `protobuf:"bytes,3,opt,name=new_nick_name,json=newNickName,proto3" json:"new_nick_name,omitempty"`
}

func (x *UpdateNickNameReq) Reset() {
	*x = UpdateNickNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNickNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNickNameReq) ProtoMessage() {}

func (x *UpdateNickNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNickNameReq.ProtoReflect.Descriptor instead.
func (*UpdateNickNameReq) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateNickNameReq) GetOldReceiverType() string {
	if x != nil {
		return x.OldReceiverType
	}
	return ""
}

func (x *UpdateNickNameReq) GetOldDynamicPassword() string {
	if x != nil {
		return x.OldDynamicPassword
	}
	return ""
}

func (x *UpdateNickNameReq) GetNewNickName() string {
	if x != nil {
		return x.NewNickName
	}
	return ""
}

type UpdateNickNameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//oldverify:server already send the dynamic password to user's email or tel(depend on the update_nick_name_req's old_receiver_type) and is waiting for verify
	//success:nothing need to do
	Step string `protobuf:"bytes,1,opt,name=step,proto3" json:"step,omitempty"`
	// send code to where,this will be masked
	// when step is success,ignore this
	CodeTo string `protobuf:"bytes,2,opt,name=code_to,json=codeTo,proto3" json:"code_to,omitempty"`
}

func (x *UpdateNickNameResp) Reset() {
	*x = UpdateNickNameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNickNameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNickNameResp) ProtoMessage() {}

func (x *UpdateNickNameResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNickNameResp.ProtoReflect.Descriptor instead.
func (*UpdateNickNameResp) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateNickNameResp) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *UpdateNickNameResp) GetCodeTo() string {
	if x != nil {
		return x.CodeTo
	}
	return ""
}

type DelNickNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldReceiverType string `protobuf:"bytes,1,opt,name=old_receiver_type,json=oldReceiverType,proto3" json:"old_receiver_type,omitempty"`
	// if this is empty,means send dynamic password
	// if this is not empty,means verify dynamic password
	OldDynamicPassword string `protobuf:"bytes,2,opt,name=old_dynamic_password,json=oldDynamicPassword,proto3" json:"old_dynamic_password,omitempty"`
}

func (x *DelNickNameReq) Reset() {
	*x = DelNickNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelNickNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelNickNameReq) ProtoMessage() {}

func (x *DelNickNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelNickNameReq.ProtoReflect.Descriptor instead.
func (*DelNickNameReq) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{13}
}

func (x *DelNickNameReq) GetOldReceiverType() string {
	if x != nil {
		return x.OldReceiverType
	}
	return ""
}

func (x *DelNickNameReq) GetOldDynamicPassword() string {
	if x != nil {
		return x.OldDynamicPassword
	}
	return ""
}

type DelNickNameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//oldverify:server already send the dynamic password to user's email or tel(depend on the del_nick_name_req's old_receiver_type) and is waiting for verify
	//success:nothing need to do
	Step string `protobuf:"bytes,1,opt,name=step,proto3" json:"step,omitempty"`
	// if this is true,means this is the last way to login this account
	// if del this,this account will be deleted completely
	Final bool `protobuf:"varint,2,opt,name=final,proto3" json:"final,omitempty"`
	// send code to where,this will be masked
	// when step is success,ignore this
	CodeTo string `protobuf:"bytes,3,opt,name=code_to,json=codeTo,proto3" json:"code_to,omitempty"`
}

func (x *DelNickNameResp) Reset() {
	*x = DelNickNameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelNickNameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelNickNameResp) ProtoMessage() {}

func (x *DelNickNameResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelNickNameResp.ProtoReflect.Descriptor instead.
func (*DelNickNameResp) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{14}
}

func (x *DelNickNameResp) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *DelNickNameResp) GetFinal() bool {
	if x != nil {
		return x.Final
	}
	return false
}

func (x *DelNickNameResp) GetCodeTo() string {
	if x != nil {
		return x.CodeTo
	}
	return ""
}

type IdcardDuplicateCheckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idcard string `protobuf:"bytes,1,opt,name=idcard,proto3" json:"idcard,omitempty"`
}

func (x *IdcardDuplicateCheckReq) Reset() {
	*x = IdcardDuplicateCheckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdcardDuplicateCheckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdcardDuplicateCheckReq) ProtoMessage() {}

func (x *IdcardDuplicateCheckReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdcardDuplicateCheckReq.ProtoReflect.Descriptor instead.
func (*IdcardDuplicateCheckReq) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{15}
}

func (x *IdcardDuplicateCheckReq) GetIdcard() string {
	if x != nil {
		return x.Idcard
	}
	return ""
}

type IdcardDuplicateCheckResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duplicate bool `protobuf:"varint,1,opt,name=duplicate,proto3" json:"duplicate,omitempty"`
}

func (x *IdcardDuplicateCheckResp) Reset() {
	*x = IdcardDuplicateCheckResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdcardDuplicateCheckResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdcardDuplicateCheckResp) ProtoMessage() {}

func (x *IdcardDuplicateCheckResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdcardDuplicateCheckResp.ProtoReflect.Descriptor instead.
func (*IdcardDuplicateCheckResp) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{16}
}

func (x *IdcardDuplicateCheckResp) GetDuplicate() bool {
	if x != nil {
		return x.Duplicate
	}
	return false
}

type UpdateIdcardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldReceiverType string `protobuf:"bytes,1,opt,name=old_receiver_type,json=oldReceiverType,proto3" json:"old_receiver_type,omitempty"`
	// if this is empty,means send dynamic password
	// if this is not empty,means verify dynamic password
	OldDynamicPassword string `protobuf:"bytes,2,opt,name=old_dynamic_password,json=oldDynamicPassword,proto3" json:"old_dynamic_password,omitempty"`
	NewIdcard          string `protobuf:"bytes,3,opt,name=new_idcard,json=newIdcard,proto3" json:"new_idcard,omitempty"`
}

func (x *UpdateIdcardReq) Reset() {
	*x = UpdateIdcardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIdcardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIdcardReq) ProtoMessage() {}

func (x *UpdateIdcardReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIdcardReq.ProtoReflect.Descriptor instead.
func (*UpdateIdcardReq) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateIdcardReq) GetOldReceiverType() string {
	if x != nil {
		return x.OldReceiverType
	}
	return ""
}

func (x *UpdateIdcardReq) GetOldDynamicPassword() string {
	if x != nil {
		return x.OldDynamicPassword
	}
	return ""
}

func (x *UpdateIdcardReq) GetNewIdcard() string {
	if x != nil {
		return x.NewIdcard
	}
	return ""
}

type UpdateIdcardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//oldverify:server already send the dynamic password to user's email or tel(depend on the update_idcard_req's old_receiver_type) and is waiting for verify
	//success:nothing need to do
	Step string `protobuf:"bytes,1,opt,name=step,proto3" json:"step,omitempty"`
	// send code to where,this will be masked
	// when step is success,ignore this
	CodeTo string `protobuf:"bytes,2,opt,name=code_to,json=codeTo,proto3" json:"code_to,omitempty"`
}

func (x *UpdateIdcardResp) Reset() {
	*x = UpdateIdcardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIdcardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIdcardResp) ProtoMessage() {}

func (x *UpdateIdcardResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIdcardResp.ProtoReflect.Descriptor instead.
func (*UpdateIdcardResp) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateIdcardResp) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *UpdateIdcardResp) GetCodeTo() string {
	if x != nil {
		return x.CodeTo
	}
	return ""
}

type DelIdcardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldReceiverType string `protobuf:"bytes,1,opt,name=old_receiver_type,json=oldReceiverType,proto3" json:"old_receiver_type,omitempty"`
	// if this is empty,means send dynamic password
	// if this is not empty,means verify dynamic password
	OldDynamicPassword string `protobuf:"bytes,2,opt,name=old_dynamic_password,json=oldDynamicPassword,proto3" json:"old_dynamic_password,omitempty"`
}

func (x *DelIdcardReq) Reset() {
	*x = DelIdcardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelIdcardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelIdcardReq) ProtoMessage() {}

func (x *DelIdcardReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelIdcardReq.ProtoReflect.Descriptor instead.
func (*DelIdcardReq) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{19}
}

func (x *DelIdcardReq) GetOldReceiverType() string {
	if x != nil {
		return x.OldReceiverType
	}
	return ""
}

func (x *DelIdcardReq) GetOldDynamicPassword() string {
	if x != nil {
		return x.OldDynamicPassword
	}
	return ""
}

type DelIdcardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//oldverify:server already send the dynamic password to user's email or tel(depend on the del_idcard_req's old_receiver_type) and is waiting for verify
	//success:nothing need to do
	Step string `protobuf:"bytes,1,opt,name=step,proto3" json:"step,omitempty"`
	// if this is true,means this is the last way to login this account
	// if del this,this account will be deleted completely
	Final bool `protobuf:"varint,2,opt,name=final,proto3" json:"final,omitempty"`
	// send code to where,this will be masked
	// when step is success,ignore this
	CodeTo string `protobuf:"bytes,3,opt,name=code_to,json=codeTo,proto3" json:"code_to,omitempty"`
}

func (x *DelIdcardResp) Reset() {
	*x = DelIdcardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelIdcardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelIdcardResp) ProtoMessage() {}

func (x *DelIdcardResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelIdcardResp.ProtoReflect.Descriptor instead.
func (*DelIdcardResp) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{20}
}

func (x *DelIdcardResp) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *DelIdcardResp) GetFinal() bool {
	if x != nil {
		return x.Final
	}
	return false
}

func (x *DelIdcardResp) GetCodeTo() string {
	if x != nil {
		return x.CodeTo
	}
	return ""
}

type EmailDuplicateCheckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *EmailDuplicateCheckReq) Reset() {
	*x = EmailDuplicateCheckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailDuplicateCheckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailDuplicateCheckReq) ProtoMessage() {}

func (x *EmailDuplicateCheckReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailDuplicateCheckReq.ProtoReflect.Descriptor instead.
func (*EmailDuplicateCheckReq) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{21}
}

func (x *EmailDuplicateCheckReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type EmailDuplicateCheckResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duplicate bool `protobuf:"varint,1,opt,name=duplicate,proto3" json:"duplicate,omitempty"`
}

func (x *EmailDuplicateCheckResp) Reset() {
	*x = EmailDuplicateCheckResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailDuplicateCheckResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailDuplicateCheckResp) ProtoMessage() {}

func (x *EmailDuplicateCheckResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailDuplicateCheckResp.ProtoReflect.Descriptor instead.
func (*EmailDuplicateCheckResp) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{22}
}

func (x *EmailDuplicateCheckResp) GetDuplicate() bool {
	if x != nil {
		return x.Duplicate
	}
	return false
}

type UpdateEmailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldReceiverType string `protobuf:"bytes,1,opt,name=old_receiver_type,json=oldReceiverType,proto3" json:"old_receiver_type,omitempty"`
	// if this is empty,means send dynamic password
	// if this is not empty,means verify dynamic password
	OldDynamicPassword string `protobuf:"bytes,2,opt,name=old_dynamic_password,json=oldDynamicPassword,proto3" json:"old_dynamic_password,omitempty"`
	NewEmail           string `protobuf:"bytes,3,opt,name=new_email,json=newEmail,proto3" json:"new_email,omitempty"`
	// if this is empty,means send dynamic password.
	// if this is not empty,means verify dynamic password.
	NewEmailDynamicPassword string `protobuf:"bytes,4,opt,name=new_email_dynamic_password,json=newEmailDynamicPassword,proto3" json:"new_email_dynamic_password,omitempty"`
}

func (x *UpdateEmailReq) Reset() {
	*x = UpdateEmailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmailReq) ProtoMessage() {}

func (x *UpdateEmailReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmailReq.ProtoReflect.Descriptor instead.
func (*UpdateEmailReq) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateEmailReq) GetOldReceiverType() string {
	if x != nil {
		return x.OldReceiverType
	}
	return ""
}

func (x *UpdateEmailReq) GetOldDynamicPassword() string {
	if x != nil {
		return x.OldDynamicPassword
	}
	return ""
}

func (x *UpdateEmailReq) GetNewEmail() string {
	if x != nil {
		return x.NewEmail
	}
	return ""
}

func (x *UpdateEmailReq) GetNewEmailDynamicPassword() string {
	if x != nil {
		return x.NewEmailDynamicPassword
	}
	return ""
}

type UpdateEmailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//oldverify:server already send the dynamic password to user's email or tel(depend on the update_email_req's old_receiver_type) and is waiting for verify
	//newverify:server already send the dynamic password to the new email(depend on the update_email_req's new_email) and is waiting for verify
	//success:nothing need to do
	Step string `protobuf:"bytes,1,opt,name=step,proto3" json:"step,omitempty"`
	// send code to where,this will be masked
	// when step is success,ignore this
	CodeTo string `protobuf:"bytes,2,opt,name=code_to,json=codeTo,proto3" json:"code_to,omitempty"`
}

func (x *UpdateEmailResp) Reset() {
	*x = UpdateEmailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmailResp) ProtoMessage() {}

func (x *UpdateEmailResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmailResp.ProtoReflect.Descriptor instead.
func (*UpdateEmailResp) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateEmailResp) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *UpdateEmailResp) GetCodeTo() string {
	if x != nil {
		return x.CodeTo
	}
	return ""
}

type DelEmailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldReceiverType string `protobuf:"bytes,1,opt,name=old_receiver_type,json=oldReceiverType,proto3" json:"old_receiver_type,omitempty"`
	// if this is empty,means send dynamic password
	// if this is not empty,means verify dynamic password
	OldDynamicPassword string `protobuf:"bytes,2,opt,name=old_dynamic_password,json=oldDynamicPassword,proto3" json:"old_dynamic_password,omitempty"`
}

func (x *DelEmailReq) Reset() {
	*x = DelEmailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelEmailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelEmailReq) ProtoMessage() {}

func (x *DelEmailReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelEmailReq.ProtoReflect.Descriptor instead.
func (*DelEmailReq) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{25}
}

func (x *DelEmailReq) GetOldReceiverType() string {
	if x != nil {
		return x.OldReceiverType
	}
	return ""
}

func (x *DelEmailReq) GetOldDynamicPassword() string {
	if x != nil {
		return x.OldDynamicPassword
	}
	return ""
}

type DelEmailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//oldverify:server already send the dynamic password to user's email or tel(depend on the del_email_req's old_receiver_type) and is waiting for verify
	//success:nothing need to do
	Step string `protobuf:"bytes,1,opt,name=step,proto3" json:"step,omitempty"`
	// if this is true,means this is the last way to login this account
	// if del this,this account will be deleted completely
	Final bool `protobuf:"varint,2,opt,name=final,proto3" json:"final,omitempty"`
	// send code to where,this will be masked
	// when step is success,ignore this
	CodeTo string `protobuf:"bytes,3,opt,name=code_to,json=codeTo,proto3" json:"code_to,omitempty"`
}

func (x *DelEmailResp) Reset() {
	*x = DelEmailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelEmailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelEmailResp) ProtoMessage() {}

func (x *DelEmailResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelEmailResp.ProtoReflect.Descriptor instead.
func (*DelEmailResp) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{26}
}

func (x *DelEmailResp) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *DelEmailResp) GetFinal() bool {
	if x != nil {
		return x.Final
	}
	return false
}

func (x *DelEmailResp) GetCodeTo() string {
	if x != nil {
		return x.CodeTo
	}
	return ""
}

type TelDuplicateCheckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tel string `protobuf:"bytes,1,opt,name=tel,proto3" json:"tel,omitempty"`
}

func (x *TelDuplicateCheckReq) Reset() {
	*x = TelDuplicateCheckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelDuplicateCheckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelDuplicateCheckReq) ProtoMessage() {}

func (x *TelDuplicateCheckReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelDuplicateCheckReq.ProtoReflect.Descriptor instead.
func (*TelDuplicateCheckReq) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{27}
}

func (x *TelDuplicateCheckReq) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

type TelDuplicateCheckResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duplicate bool `protobuf:"varint,1,opt,name=duplicate,proto3" json:"duplicate,omitempty"`
}

func (x *TelDuplicateCheckResp) Reset() {
	*x = TelDuplicateCheckResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelDuplicateCheckResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelDuplicateCheckResp) ProtoMessage() {}

func (x *TelDuplicateCheckResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelDuplicateCheckResp.ProtoReflect.Descriptor instead.
func (*TelDuplicateCheckResp) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{28}
}

func (x *TelDuplicateCheckResp) GetDuplicate() bool {
	if x != nil {
		return x.Duplicate
	}
	return false
}

type UpdateTelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldReceiverType string `protobuf:"bytes,1,opt,name=old_receiver_type,json=oldReceiverType,proto3" json:"old_receiver_type,omitempty"`
	// if this is empty,means send dynamic password
	// if this is not empty,means verify dynamic password
	OldDynamicPassword string `protobuf:"bytes,2,opt,name=old_dynamic_password,json=oldDynamicPassword,proto3" json:"old_dynamic_password,omitempty"`
	NewTel             string `protobuf:"bytes,3,opt,name=new_tel,json=newTel,proto3" json:"new_tel,omitempty"`
	// if this is empty,means send dynamic password.
	// if this is not empty,means verify dynamic password.
	NewTelDynamicPassword string `protobuf:"bytes,4,opt,name=new_tel_dynamic_password,json=newTelDynamicPassword,proto3" json:"new_tel_dynamic_password,omitempty"`
}

func (x *UpdateTelReq) Reset() {
	*x = UpdateTelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTelReq) ProtoMessage() {}

func (x *UpdateTelReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTelReq.ProtoReflect.Descriptor instead.
func (*UpdateTelReq) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateTelReq) GetOldReceiverType() string {
	if x != nil {
		return x.OldReceiverType
	}
	return ""
}

func (x *UpdateTelReq) GetOldDynamicPassword() string {
	if x != nil {
		return x.OldDynamicPassword
	}
	return ""
}

func (x *UpdateTelReq) GetNewTel() string {
	if x != nil {
		return x.NewTel
	}
	return ""
}

func (x *UpdateTelReq) GetNewTelDynamicPassword() string {
	if x != nil {
		return x.NewTelDynamicPassword
	}
	return ""
}

type UpdateTelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//oldverify:server already send the dynamic password to user's email or tel(depend on the update_tel_req's old_receiver_type) and is waiting for verify
	//newverify:server already send the dynamic password to the new tel(depend on the update_tel_req's new_tel) and is waiting for verify
	//success:nothing need to do
	Step string `protobuf:"bytes,1,opt,name=step,proto3" json:"step,omitempty"`
	// send code to where,this will be masked
	// when step is success,ignore this
	CodeTo string `protobuf:"bytes,2,opt,name=code_to,json=codeTo,proto3" json:"code_to,omitempty"`
}

func (x *UpdateTelResp) Reset() {
	*x = UpdateTelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTelResp) ProtoMessage() {}

func (x *UpdateTelResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTelResp.ProtoReflect.Descriptor instead.
func (*UpdateTelResp) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateTelResp) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *UpdateTelResp) GetCodeTo() string {
	if x != nil {
		return x.CodeTo
	}
	return ""
}

type DelTelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldReceiverType string `protobuf:"bytes,1,opt,name=old_receiver_type,json=oldReceiverType,proto3" json:"old_receiver_type,omitempty"`
	// if this is empty,means send dynamic password
	// if this is not empty,means verify dynamic password
	OldDynamicPassword string `protobuf:"bytes,2,opt,name=old_dynamic_password,json=oldDynamicPassword,proto3" json:"old_dynamic_password,omitempty"`
}

func (x *DelTelReq) Reset() {
	*x = DelTelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelTelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTelReq) ProtoMessage() {}

func (x *DelTelReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTelReq.ProtoReflect.Descriptor instead.
func (*DelTelReq) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{31}
}

func (x *DelTelReq) GetOldReceiverType() string {
	if x != nil {
		return x.OldReceiverType
	}
	return ""
}

func (x *DelTelReq) GetOldDynamicPassword() string {
	if x != nil {
		return x.OldDynamicPassword
	}
	return ""
}

type DelTelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//oldverify:server already send the dynamic password to user's email or tel(depend on the del_tel_req's old_receiver_type) and is waiting for verify
	//success:nothing need to do
	Step string `protobuf:"bytes,1,opt,name=step,proto3" json:"step,omitempty"`
	// if this is true,means this is the last way to login this account
	// if del this,this account will be deleted completely
	Final bool `protobuf:"varint,2,opt,name=final,proto3" json:"final,omitempty"`
	// send code to where,this will be masked
	// when step is success,ignore this
	CodeTo string `protobuf:"bytes,3,opt,name=code_to,json=codeTo,proto3" json:"code_to,omitempty"`
}

func (x *DelTelResp) Reset() {
	*x = DelTelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_account_user_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelTelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTelResp) ProtoMessage() {}

func (x *DelTelResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_account_user_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTelResp.ProtoReflect.Descriptor instead.
func (*DelTelResp) Descriptor() ([]byte, []int) {
	return file_api_account_user_proto_rawDescGZIP(), []int{32}
}

func (x *DelTelResp) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *DelTelResp) GetFinal() bool {
	if x != nil {
		return x.Final
	}
	return false
}

func (x *DelTelResp) GetCodeTo() string {
	if x != nil {
		return x.CodeTo
	}
	return ""
}

var File_api_account_user_proto protoreflect.FileDescriptor

var file_api_account_user_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x1a, 0x0f, 0x70, 0x62, 0x65, 0x78, 0x2f, 0x70, 0x62, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x86, 0x02, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x63,
	0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x63, 0x61, 0x72,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63,
	0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x05,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x65,
	0x79, 0x1a, 0x38, 0x0a, 0x0a, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7a, 0x0a, 0x11, 0x67,
	0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x71,
	0x12, 0x4d, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x32, 0xd2, 0x90, 0x4e, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0xd2,
	0x90, 0x4e, 0x03, 0x74, 0x65, 0x6c, 0xd2, 0x90, 0x4e, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0xd2,
	0x90, 0x4e, 0x06, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0xd2, 0x90, 0x4e, 0x09, 0x6e, 0x69, 0x63,
	0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x07, 0x73, 0x72, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90,
	0x4e, 0x00, 0x52, 0x03, 0x73, 0x72, 0x63, 0x22, 0x3c, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xbf, 0x01, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x72, 0x65, 0x71, 0x12, 0x42, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0xd2, 0x90, 0x4e, 0x03, 0x74, 0x65, 0x6c, 0xd2, 0x90,
	0x4e, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0xd2, 0x90, 0x4e, 0x06, 0x69, 0x64, 0x63, 0x61, 0x72,
	0x64, 0xd2, 0x90, 0x4e, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x07,
	0x73, 0x72, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12,
	0x3a, 0x0a, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xd2, 0x90, 0x4e, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x63, 0xd2, 0x90, 0x4e, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x0c, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x5e, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x22, 0x14, 0x0a, 0x12, 0x73, 0x65, 0x6c, 0x66, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x71, 0x22, 0x3d, 0x0a,
	0x13, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x82, 0x01, 0x0a,
	0x1a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x13, 0x6f,
	0x6c, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x34, 0x0a, 0x13, 0x6e,
	0x65, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf8, 0x90, 0x4e, 0x0a, 0x52, 0x11,
	0x6e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x22, 0x42, 0x0a, 0x1d, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x75,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65,
	0x71, 0x12, 0x21, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x1e, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x75, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x3c, 0x0a,
	0x11, 0x6f, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xd2, 0x90, 0x4e, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0xd2, 0x90, 0x4e, 0x03, 0x74, 0x65, 0x6c, 0x52, 0x0f, 0x6f, 0x6c, 0x64, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6f,
	0x6c, 0x64, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6f, 0x6c, 0x64, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x28, 0x0a,
	0x0d, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x4e,
	0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x74, 0x65, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x22, 0x83, 0x01,
	0x0a, 0x11, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x72, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x11, 0x6f, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10,
	0xd2, 0x90, 0x4e, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0xd2, 0x90, 0x4e, 0x03, 0x74, 0x65, 0x6c,
	0x52, 0x0f, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x30, 0x0a, 0x14, 0x6f, 0x6c, 0x64, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x6f, 0x6c, 0x64, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0x57, 0x0a, 0x12, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x22, 0x3a, 0x0a, 0x1a,
	0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x06, 0x69, 0x64,
	0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00,
	0x52, 0x06, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x22, 0x3b, 0x0a, 0x1b, 0x69, 0x64, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x75, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x75, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x11, 0x6f,
	0x6c, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xd2, 0x90, 0x4e, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0xd2, 0x90, 0x4e, 0x03, 0x74, 0x65, 0x6c, 0x52, 0x0f, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6f, 0x6c, 0x64,
	0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6f, 0x6c, 0x64, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x23, 0x0a, 0x0a, 0x6e,
	0x65, 0x77, 0x5f, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x49, 0x64, 0x63, 0x61, 0x72, 0x64,
	0x22, 0x41, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64,
	0x65, 0x54, 0x6f, 0x22, 0x80, 0x01, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x11, 0x6f, 0x6c, 0x64, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x10, 0xd2, 0x90, 0x4e, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0xd2, 0x90, 0x4e, 0x03,
	0x74, 0x65, 0x6c, 0x52, 0x0f, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6f, 0x6c, 0x64, 0x5f, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x6f, 0x6c, 0x64, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x54, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x22, 0x37, 0x0a, 0x19,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x3a, 0x0a, 0x1a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x64,
	0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x22, 0xe2, 0x01, 0x0a, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x11, 0x6f, 0x6c, 0x64, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x10, 0xd2, 0x90, 0x4e, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0xd2, 0x90, 0x4e, 0x03,
	0x74, 0x65, 0x6c, 0x52, 0x0f, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6f, 0x6c, 0x64, 0x5f, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x6f, 0x6c, 0x64, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52,
	0x08, 0x6e, 0x65, 0x77, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x3b, 0x0a, 0x1a, 0x6e, 0x65, 0x77,
	0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x6e,
	0x65, 0x77, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x40, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x22, 0x7f, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x11, 0x6f, 0x6c, 0x64,
	0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xd2, 0x90, 0x4e, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0xd2,
	0x90, 0x4e, 0x03, 0x74, 0x65, 0x6c, 0x52, 0x0f, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6f, 0x6c, 0x64, 0x5f, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6f, 0x6c, 0x64, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x53, 0x0a, 0x0e, 0x64, 0x65, 0x6c,
	0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x22, 0x31,
	0x0a, 0x17, 0x74, 0x65, 0x6c, 0x5f, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x03, 0x74, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x03, 0x74, 0x65,
	0x6c, 0x22, 0x38, 0x0a, 0x18, 0x74, 0x65, 0x6c, 0x5f, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x0e,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x3c,
	0x0a, 0x11, 0x6f, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xd2, 0x90, 0x4e, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0xd2, 0x90, 0x4e, 0x03, 0x74, 0x65, 0x6c, 0x52, 0x0f, 0x6f, 0x6c, 0x64,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14,
	0x6f, 0x6c, 0x64, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6f, 0x6c, 0x64, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1d,
	0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x74, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x54, 0x65, 0x6c, 0x12, 0x37, 0x0a,
	0x18, 0x6e, 0x65, 0x77, 0x5f, 0x74, 0x65, 0x6c, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x6e, 0x65, 0x77, 0x54, 0x65, 0x6c, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x3e, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x22, 0x7d, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x5f, 0x74, 0x65,
	0x6c, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x11, 0x6f, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x10, 0xd2, 0x90, 0x4e, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0xd2, 0x90, 0x4e, 0x03, 0x74,
	0x65, 0x6c, 0x52, 0x0f, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6f, 0x6c, 0x64, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x6f, 0x6c, 0x64, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x51, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x5f, 0x74, 0x65, 0x6c,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x32, 0xff, 0x0b, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x48, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x1a, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x67, 0x65, 0x74,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x05, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x08, 0x8a,
	0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x12, 0x5e, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x66, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f,
	0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x76, 0x0a, 0x16, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x23, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f,
	0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x7f, 0x0a, 0x19, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x75, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x26, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x5f, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x5f, 0x72, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x6e,
	0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a,
	0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x64, 0x0a, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x72, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x5b, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x69,
	0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x72, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x65,
	0x6c, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x76, 0x0a, 0x16, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x75,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x23, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x64,
	0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72,
	0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x69, 0x64, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f,
	0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x5b, 0x0a, 0x0d, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92,
	0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x52, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x12, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70,
	0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x73, 0x0a, 0x15,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x22, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11,
	0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x58, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x19, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f,
	0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4f, 0x0a, 0x09, 0x64,
	0x65, 0x6c, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x64, 0x65, 0x6c, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x71,
	0x1a, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x65, 0x6c, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70,
	0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x6d, 0x0a, 0x13,
	0x74, 0x65, 0x6c, 0x5f, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x12, 0x20, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x74, 0x65,
	0x6c, 0x5f, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x74, 0x65, 0x6c, 0x5f, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f,
	0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x52, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x6c, 0x12, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x6c, 0x5f, 0x72,
	0x65, 0x71, 0x1a, 0x18, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f,
	0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x49, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x5f, 0x74, 0x65, 0x6c, 0x12, 0x14, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x65, 0x6c, 0x5f, 0x74, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x71,
	0x1a, 0x15, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x65, 0x6c, 0x5f, 0x74,
	0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73,
	0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x65, 0x6e, 0x6a, 0x69, 0x65,
	0x31, 0x39, 0x39, 0x32, 0x33, 0x34, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x61,
	0x70, 0x69, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_account_user_proto_rawDescOnce sync.Once
	file_api_account_user_proto_rawDescData = file_api_account_user_proto_rawDesc
)

func file_api_account_user_proto_rawDescGZIP() []byte {
	file_api_account_user_proto_rawDescOnce.Do(func() {
		file_api_account_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_account_user_proto_rawDescData)
	})
	return file_api_account_user_proto_rawDescData
}

var file_api_account_user_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_api_account_user_proto_goTypes = []interface{}{
	(*UserInfo)(nil),                   // 0: account.user_info
	(*GetUserInfoReq)(nil),             // 1: account.get_user_info_req
	(*GetUserInfoResp)(nil),            // 2: account.get_user_info_resp
	(*LoginReq)(nil),                   // 3: account.login_req
	(*LoginResp)(nil),                  // 4: account.login_resp
	(*SelfUserInfoReq)(nil),            // 5: account.self_user_info_req
	(*SelfUserInfoResp)(nil),           // 6: account.self_user_info_resp
	(*UpdateStaticPasswordReq)(nil),    // 7: account.update_static_password_req
	(*UpdateStaticPasswordResp)(nil),   // 8: account.update_static_password_resp
	(*NickNameDuplicateCheckReq)(nil),  // 9: account.nick_name_duplicate_check_req
	(*NickNameDuplicateCheckResp)(nil), // 10: account.nick_name_duplicate_check_resp
	(*UpdateNickNameReq)(nil),          // 11: account.update_nick_name_req
	(*UpdateNickNameResp)(nil),         // 12: account.update_nick_name_resp
	(*DelNickNameReq)(nil),             // 13: account.del_nick_name_req
	(*DelNickNameResp)(nil),            // 14: account.del_nick_name_resp
	(*IdcardDuplicateCheckReq)(nil),    // 15: account.idcard_duplicate_check_req
	(*IdcardDuplicateCheckResp)(nil),   // 16: account.idcard_duplicate_check_resp
	(*UpdateIdcardReq)(nil),            // 17: account.update_idcard_req
	(*UpdateIdcardResp)(nil),           // 18: account.update_idcard_resp
	(*DelIdcardReq)(nil),               // 19: account.del_idcard_req
	(*DelIdcardResp)(nil),              // 20: account.del_idcard_resp
	(*EmailDuplicateCheckReq)(nil),     // 21: account.email_duplicate_check_req
	(*EmailDuplicateCheckResp)(nil),    // 22: account.email_duplicate_check_resp
	(*UpdateEmailReq)(nil),             // 23: account.update_email_req
	(*UpdateEmailResp)(nil),            // 24: account.update_email_resp
	(*DelEmailReq)(nil),                // 25: account.del_email_req
	(*DelEmailResp)(nil),               // 26: account.del_email_resp
	(*TelDuplicateCheckReq)(nil),       // 27: account.tel_duplicate_check_req
	(*TelDuplicateCheckResp)(nil),      // 28: account.tel_duplicate_check_resp
	(*UpdateTelReq)(nil),               // 29: account.update_tel_req
	(*UpdateTelResp)(nil),              // 30: account.update_tel_resp
	(*DelTelReq)(nil),                  // 31: account.del_tel_req
	(*DelTelResp)(nil),                 // 32: account.del_tel_resp
	nil,                                // 33: account.user_info.MoneyEntry
}
var file_api_account_user_proto_depIdxs = []int32{
	33, // 0: account.user_info.money:type_name -> account.user_info.MoneyEntry
	0,  // 1: account.get_user_info_resp.info:type_name -> account.user_info
	0,  // 2: account.login_resp.info:type_name -> account.user_info
	0,  // 3: account.self_user_info_resp.info:type_name -> account.user_info
	1,  // 4: account.user.get_user_info:input_type -> account.get_user_info_req
	3,  // 5: account.user.login:input_type -> account.login_req
	5,  // 6: account.user.self_user_info:input_type -> account.self_user_info_req
	7,  // 7: account.user.update_static_password:input_type -> account.update_static_password_req
	9,  // 8: account.user.nick_name_duplicate_check:input_type -> account.nick_name_duplicate_check_req
	11, // 9: account.user.update_nick_name:input_type -> account.update_nick_name_req
	13, // 10: account.user.del_nick_name:input_type -> account.del_nick_name_req
	15, // 11: account.user.idcard_duplicate_check:input_type -> account.idcard_duplicate_check_req
	17, // 12: account.user.update_idcard:input_type -> account.update_idcard_req
	19, // 13: account.user.del_idcard:input_type -> account.del_idcard_req
	21, // 14: account.user.email_duplicate_check:input_type -> account.email_duplicate_check_req
	23, // 15: account.user.update_email:input_type -> account.update_email_req
	25, // 16: account.user.del_email:input_type -> account.del_email_req
	27, // 17: account.user.tel_duplicate_check:input_type -> account.tel_duplicate_check_req
	29, // 18: account.user.update_tel:input_type -> account.update_tel_req
	31, // 19: account.user.del_tel:input_type -> account.del_tel_req
	2,  // 20: account.user.get_user_info:output_type -> account.get_user_info_resp
	4,  // 21: account.user.login:output_type -> account.login_resp
	6,  // 22: account.user.self_user_info:output_type -> account.self_user_info_resp
	8,  // 23: account.user.update_static_password:output_type -> account.update_static_password_resp
	10, // 24: account.user.nick_name_duplicate_check:output_type -> account.nick_name_duplicate_check_resp
	12, // 25: account.user.update_nick_name:output_type -> account.update_nick_name_resp
	14, // 26: account.user.del_nick_name:output_type -> account.del_nick_name_resp
	16, // 27: account.user.idcard_duplicate_check:output_type -> account.idcard_duplicate_check_resp
	18, // 28: account.user.update_idcard:output_type -> account.update_idcard_resp
	20, // 29: account.user.del_idcard:output_type -> account.del_idcard_resp
	22, // 30: account.user.email_duplicate_check:output_type -> account.email_duplicate_check_resp
	24, // 31: account.user.update_email:output_type -> account.update_email_resp
	26, // 32: account.user.del_email:output_type -> account.del_email_resp
	28, // 33: account.user.tel_duplicate_check:output_type -> account.tel_duplicate_check_resp
	30, // 34: account.user.update_tel:output_type -> account.update_tel_resp
	32, // 35: account.user.del_tel:output_type -> account.del_tel_resp
	20, // [20:36] is the sub-list for method output_type
	4,  // [4:20] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_api_account_user_proto_init() }
func file_api_account_user_proto_init() {
	if File_api_account_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_account_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelfUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelfUserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStaticPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStaticPasswordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NickNameDuplicateCheckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NickNameDuplicateCheckResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNickNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNickNameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelNickNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelNickNameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdcardDuplicateCheckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdcardDuplicateCheckResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIdcardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIdcardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelIdcardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelIdcardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailDuplicateCheckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailDuplicateCheckResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEmailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEmailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelEmailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelEmailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelDuplicateCheckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelDuplicateCheckResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelTelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_account_user_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelTelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_account_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_account_user_proto_goTypes,
		DependencyIndexes: file_api_account_user_proto_depIdxs,
		MessageInfos:      file_api_account_user_proto_msgTypes,
	}.Build()
	File_api_account_user_proto = out.File
	file_api_account_user_proto_rawDesc = nil
	file_api_account_user_proto_goTypes = nil
	file_api_account_user_proto_depIdxs = nil
}
