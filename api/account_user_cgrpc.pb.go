// Code generated by protoc-gen-go-cgrpc. DO NOT EDIT.
// version:
// 	protoc-gen-go-cgrpc v0.0.99<br />
// 	protoc              v4.25.3<br />
// source: api/account_user.proto<br />

package api

import (
	context "context"
	cerror "github.com/chenjie199234/Corelib/cerror"
	cgrpc "github.com/chenjie199234/Corelib/cgrpc"
	log "github.com/chenjie199234/Corelib/log"
	grpc "google.golang.org/grpc"
)

var _CGrpcPathUserGetUserInfo = "/account.user/get_user_info"

type UserCGrpcClient interface {
	GetUserInfo(context.Context, *GetUserInfoReq, ...grpc.CallOption) (*GetUserInfoResp, error)
}

type userCGrpcClient struct {
	cc grpc.ClientConnInterface
}

func NewUserCGrpcClient(cc grpc.ClientConnInterface) UserCGrpcClient {
	return &userCGrpcClient{cc: cc}
}

func (c *userCGrpcClient) GetUserInfo(ctx context.Context, req *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoResp, error) {
	if req == nil {
		return nil, cerror.ErrReq
	}
	resp := new(GetUserInfoResp)
	if e := c.cc.Invoke(ctx, _CGrpcPathUserGetUserInfo, req, resp, opts...); e != nil {
		return nil, e
	}
	return resp, nil
}

type UserCGrpcServer interface {
	GetUserInfo(context.Context, *GetUserInfoReq) (*GetUserInfoResp, error)
}

func _User_GetUserInfo_CGrpcHandler(handler func(context.Context, *GetUserInfoReq) (*GetUserInfoResp, error)) cgrpc.OutsideHandler {
	return func(ctx *cgrpc.Context) {
		req := new(GetUserInfoReq)
		if e := ctx.DecodeReq(req); e != nil {
			log.Error(ctx, "[/account.user/get_user_info] decode failed")
			ctx.Abort(cerror.ErrReq)
			return
		}
		if errstr := req.Validate(); errstr != "" {
			log.Error(ctx, "[/account.user/get_user_info] validate failed", log.String("validate", errstr))
			ctx.Abort(cerror.ErrReq)
			return
		}
		resp, e := handler(ctx, req)
		if e != nil {
			ctx.Abort(e)
			return
		}
		if resp == nil {
			resp = new(GetUserInfoResp)
		}
		ctx.Write(resp)
	}
}
func RegisterUserCGrpcServer(engine *cgrpc.CGrpcServer, svc UserCGrpcServer, allmids map[string]cgrpc.OutsideHandler) {
	// avoid lint
	_ = allmids
	engine.RegisterHandler("account.user", "get_user_info", _User_GetUserInfo_CGrpcHandler(svc.GetUserInfo))
}
